#!/bin/bash

# Purpose of the script
#
#	   Update ts3server or check for updates.
#
#	   created		- Fabian Meier
#	   edit			- Fabian Meier
#	   last edit		- 29.05.2019
#	   version		- 0.1

VERSION="0.1"
RELEASE="ANNOYING ALLITERATIONS ARE ACCEPTABLE"

### CHECK DEPENDENCIES
if [ "$EUID" -ne 0 ]; then
	echo -e >&2 "\033[31mERROR:\e[0m Please run as root or with SUDO privileges! Aborting..."
	exit 1
fi

### VARIABLES
TS3VERS=$(curl -s https://files.teamspeak-services.com/releases/server/ | grep -E "\w\.\w\w\.\w+" | sed -e 's/<[^>]*>//g' | tail -n 1 | tr -d '\r')
TS3DATE=`date '+%Y%m%d_%H%M%S'`
TS3DIR=/opt/teamspeak
TS3BACKUPDIR=/opt/ts3_backup

### FUNCTIONS
usage()
{
	echo -e "This script updates ts3server\n"
	echo -e "\033[32mUsage:\033[0m\t$(basename $0) [-c | -u | -s]\n"
	echo -e "Options:"
	echo -e "\t-c\t\tChecks for updates."
	echo -e "\t-s\t\tUpdates ts3server silently."
	echo -e "\t-u\t\tUpdates ts3server."
	echo -e "\t-v\t\tVersion and releaseinfo."
	echo -e "\t-h\t\tShows this help."
	echo -e "\n\033[32mVersion:\033[0m ${VERSION}\n\033[32mRelease:\033[0m ${RELEASE}\n"
	exit
}

tsupdate()
{
	echo -e "\nDownloading newest ts3 version..."
	cd ${TS3DIR}
	wget -q https://files.teamspeak-services.com/releases/server/${TS3VERS}/teamspeak3-server_linux_amd64-${TS3VERS}.tar.bz2

	if [[ ${?} == 0 ]]; then

		echo -e "\n\033[32mDownload successful!\033[0m\n"

		while true; do

			read -p "Do you want to start the update? The server will be temporarily unavailable! [Yes/No] " TS3REPLY
				
			if [[ ${TS3REPLY} =~ ^[Yy][Ee][Ss]$ ]]; then

				echo -e "\nStopping ts3server..."
				systemctl stop ts3

				echo -e "\nBacking up current ts3server files to ${TS3BACKUPDIR}"
				tar -cjf ts3server_bak_${TS3DATE}.tar.bz2 teamspeak3-server_linux_amd64
				mv ts3server_bak_${TS3DATE}.tar.bz2 ${TS3BACKUPDIR}/.

				echo -e "\nRemoving old backups..."
				find ${TS3BACKUPDIR} -mtime +60 -delete

				echo -e "\nUnpacking new ts3server files..."
				tar -xjf teamspeak3-server_linux_amd64-${TS3VERS}.tar.bz2
				rm -f teamspeak3-server_linux_amd64-${TS3VERS}.tar.bz2
				chown -R ts3. ${TS3DIR}

				echo -e "\nStarting ts3server..."
				systemctl start ts3

				if [[ $(systemctl is-active ts3) == "active" ]]; then
					echo -e "\n\033[32mUpdate successful!\e[0m"
				else
					echo -e "\n\033[31mServer didn't start! Checking journalctl -xe...\e[0m"
					journalctl -xe
				fi

				exit 0

			elif [[ ${TS3REPLY} =~ ^[Nn][Oo]$ ]]; then
				echo -e "\nAborting..."
				exit 1
			else
				echo -e "\n\033[33mINVALID ANSWER! Please answer yes or no!\e[0m\n"
			fi

		done

	fi

}

tscheck()
{
	echo -e "The newest available version is: ${TS3VERS}"
}

tsdaemon()
{
	cd ${TS3DIR}
	wget -q https://files.teamspeak-services.com/releases/server/${TS3VERS}/teamspeak3-server_linux_amd64-${TS3VERS}.tar.bz2

	if [[ ${?} == 0 ]]; then

		systemctl stop ts3

		tar -cjf ts3server_bak_${TS3DATE}.tar.bz2 teamspeak3-server_linux_amd64
		mv ts3server_bak_${TS3DATE}.tar.bz2 ${TS3BACKUPDIR}/.

		find ${TS3BACKUPDIR} -mtime +60 -delete
		tar -xjf teamspeak3-server_linux_amd64-${TS3VERS}.tar.bz2
		rm -f teamspeak3-server_linux_amd64-${TS3VERS}.tar.bz2

		chown -R ts3. ${TS3DIR}

		systemctl start ts3

		exit 0

	fi
}

### OPTIONS
while getopts csuvh opt 2>/dev/null
do
   case $opt in
		c)      tscheck;;
		s)      tsdaemon >/dev/null 2>&1;;
		u)      tsupdate;;
		v)      echo -e "\033[32m$(basename $0) v.\033[0m ${VERSION} - \033[32mRelease:\033[0m ${RELEASE}"
				exit;;
		\?)     echo -e "\033[31m($0): Invalid parameters\033[0m"
				usage
				exit;;
		h|*)    usage
				exit;;
   esac
done
